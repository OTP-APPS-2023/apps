Build1=Default,rs.underground.tools,KVS_ENCRYPTION
File1=Layout.bal
FileGroup1=Default Group
Group=Default Group
Library1=b4xcollections
Library10=phone
Library11=runtimepermissions
Library12=stringutils
Library13=xui
Library2=b4xencryption
Library3=byteconverter
Library4=core
Library5=encryption
Library6=javaobject
Library7=keyvaluestore
Library8=newqrcodereaderview
Library9=okhttputils2
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="31"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~AddManifestText(<uses-permission~\n~	android:name="android.permission.WRITE_EXTERNAL_STORAGE"~\n~	android:maxSdkVersion="18" />~\n~)
Module1=QRGenerator
Module2=Starter
NumberOfFiles=1
NumberOfLibraries=13
NumberOfModules=2
Version=12.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: UG Reseller
	#VersionCode: 1
	#VersionName: UNDERGROUND
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region
#AdditionalJar: bcprov-jdk15on-154
#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	Private raw As String
	Private bci As B4XCipher
	Private bc As ByteConverter
	Private md As MessageDigest
	Private su As StringUtils
	Private xui As XUI
	Private kvs As KeyValueStore
	Private qr As QRGenerator
	Private ph As Phone
	Private universal As String = "RVLTyTD3yWaChGN9psrcYvNwb9nRNjZmxtZDFLGq8tQjjM4jYrkRY8tEJvBcWKS2"
'	Private qrglobal As String = "mOhjKvbMDjgzXBYQrS7wGt1cAFvxqytgNitsJ54SaZUSwZbMPXZV5sUlrT0X4Pkl" 'demo
	Private qrglobal As String = "Xa6RZMQg3AKqEdegHJg3ruk3DHwqbFM7Kh5eXxj5MW3+UfmqPbNa8NBxuDRPQKhzR"
	Private icglobal As String = "w3XZRTNmRF9retwHxqQ27Lr2bSTt8tk9T95Q9EUVqdQDkFxn2Q6hxLUTGRkGqmVL"
	Private brand As String
	Private who As String
	Private rp As RuntimePermissions
End Sub

Sub Globals
	Private nqrcrv As NewQRCodeReaderView
	Private QRView As B4XView
	Private Button1 As Button
	Private Button2 As Button
	Private Button3 As Button
	Private Button4 As Button
	Private Button5 As Button
	Private Button6 As Button
	Private Label1 As Label
	Private EditText1 As EditText
End Sub

Sub Activity_Create(FirstTime As Boolean)
	If NoNetWork = True Then
		Msgbox2Async("Geen internetverbinding", "FOUT", "SLUITEN", "", "", Null, False)
		Wait For Msgbox_Result (Answer As Int)
		If Answer = DialogResponse.POSITIVE Then
			ExitApplication
		Else If Answer <> DialogResponse.POSITIVE Then
			ExitApplication
		End If
	End If
	Activity.LoadLayout("Layout")
	nqrcrv.AutofocusInterval = 500
	nqrcrv.ResultPointColor = Colors.Red
	nqrcrv.setBackCamera
	Dim xo() As Byte
	xo = md.GetMessageDigest(GETUniqueID.GetBytes("UTF8"),"MD5")
	Dim db As String = bc.HexFromBytes(xo)
	kvs.Initialize(File.DirInternal,db)
	Button1.Visible = False
	Button1.Text = "Scan QR"
	Button2.Visible = False
	Button2.Text = "Opwaarderen"
	Button3.Visible = False
	Button3.Text = "Activaties"
	Button4.Visible = False
	Button4.Text = "Annuleren"
	Button5.Visible = False
	Button5.Text = "Opslaan"
	Button6.Visible = False
	Button6.Text = "Annuleren"
	nqrcrv.Visible = False
	QRView.Visible = False
	EditText1.Visible = False
	EditText1.Hint = "naam reseller"
	Dim Result As Boolean = True
	If Not(rp.Check(rp.PERMISSION_CAMERA)) Then
		rp.CheckAndRequest(rp.PERMISSION_CAMERA)
		Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
	End If
	If kvs.ContainsKey("1") = False Then
		kvs.PutEncrypted("brand","UNDERGROUND",GETUniqueID)
		raw = ""
		Button1.Visible = False
		Button1.Text = "Scan QR"
		Button2.Visible = False
		Button2.Text = "Opwaarderen"
		Button3.Visible = False
		Button3.Text = "Activaties"
		Button4.Visible = False
		Button4.Text = "Annuleren"
		Button5.Visible = True
		Button5.Text = "Opslaan"
		Button6.Visible = True
		Button6.Text = "Annuleren"
		nqrcrv.Visible = False
		QRView.Visible = False
		EditText1.Visible = True
		EditText1.Hint = "naam reseller"
	Else
		start
	End If
End Sub

Sub NoNetWork As String
	Dim sb As StringBuilder
	sb.Initialize
	ph.Shell("ping -c1 8.8.8.8", Null, Null, sb)
	Dim txt As String = sb
	Return txt.Contains("unreachable")
End Sub

Private Sub start
	Dim xo() As Byte
	xo = md.GetMessageDigest(GETUniqueID.GetBytes("UTF8"),"MD5")
	Dim db As String = bc.HexFromBytes(xo)
	who = kvs.GetEncrypted("1",GETUniqueID)&db
	raw = ""
	brand = kvs.GetEncrypted("brand",GETUniqueID)
	Button1.Visible = True
	Button1.Text = "Scan QR"
	Button2.Visible = True
	Button2.Text = "Opwaarderen"
	Button3.Visible = False
	Button3.Text = "Activaties"
	Button4.Visible = False
	Button4.Text = "Annuleren"
	Button5.Visible = False
	Button5.Text = "Opslaan"
	Button6.Visible = False
	Button6.Text = "Annuleren"
	nqrcrv.Visible = False
	QRView.Visible = False
	EditText1.Visible = False
	Label1.Text = "Activaties: "&NumberFormat(kvs.GetEncrypted(2,GETUniqueID),0,0)
	If NoNetWork = False Then
		If File.Exists(File.DirInternal,"system.enc") = False Then
			Dim m As HttpJob
			m.Initialize("", Me)
			m.GetRequest.Timeout = 10000
			m.Download("https://github.com/OTP-APPS-2023/apps/raw/main/system.enc")
			Wait For (m) JobDone(m As HttpJob)
			If m.Success Then
				Dim out As OutputStream = File.OpenOutput(File.DirInternal,"system.enc", False)
				File.Copy2(m.GetInputStream, out)
				out.Close
				ToastMessageShow("Activaties zijn gedownload.",True)
			Else
				ExitApplication
			End If
		Else
			Dim m As HttpJob
			m.Initialize("", Me)
			m.GetRequest.Timeout = 10000
			m.Download("https://github.com/OTP-APPS-2023/apps/raw/main/system.enc")
			Wait For (m) JobDone(m As HttpJob)
			If m.Success Then
				Dim out As OutputStream = File.OpenOutput(File.DirInternal,"system.enc", False)
				File.Copy2(m.GetInputStream, out)
				out.Close
				ToastMessageShow("Activaties zijn gedownload.",True)
			Else
				ToastMessageShow("Activaties niet gedownload.",True)
			End If
		End If
	Else
		ToastMessageShow("Geen internet",True)
	End If
End Sub

Sub nqrcrv_result_found(retval As String)
	nqrcrv.ScanNow = False
	nqrcrv.stopCamera
	raw = retval
	FoundBarcode(raw)
End Sub

Private Sub FoundBarcode (msg As String)
	nqrcrv.ScanNow = False
	nqrcrv.stopCamera
	nqrcrv.Visible = False
	Private PubKeyB64 As String = raw
	Dim result As String
	Try
		Dim ky As String = bc.StringFromBytes(bci.Decrypt(su.DecodeBase64(PubKeyB64),universal),"UTF8")
	Catch
		result = LastException
		If result.Contains("Bad Base64") Then
			result = ""
			xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
			Terug
		Else If result.Contains("BAD_DECRYPT") Then
			result = ""
			xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
			Terug
		Else If result.Contains("WRONG_FINAL_BLOCK_LENGTH") Then
			result = ""
			xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
			Terug
		Else
			result = ""
		End If
	End Try
	
	If ky.StartsWith(brand&"ICRS:") Then
		Dim result As String
		Try
			Dim dev As String = bc.StringFromBytes(bci.Decrypt(su.DecodeBase64(ky.Replace(brand&"ICRS:","")),universal),"UTF8")
		Catch
			result = LastException
			If result.Contains("Bad Base64") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else If result.Contains("BAD_DECRYPT") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else If result.Contains("WRONG_FINAL_BLOCK_LENGTH") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else
				result = ""
				Terug
			End If
		End Try
		Dim result As String
		Try
			Dim c As B4XCipher
			Dim in As InputStream = File.OpenInput(File.DirInternal,"system.enc")
			Dim encryptedData() As Byte = c.Decrypt(Bit.InputStreamToBytes(in),"8PyN9f2kGugm4CCyadD69yQenvgsAHU7k2bgMUyL8LJnCL674kmBjKtK9YnFqcnp")
			Dim out As OutputStream = File.OpenOutput(File.DirInternalCache,"system.txt",False)
			out.WriteBytes(encryptedData, 0, encryptedData.Length)
			out.Close
		Catch
			result = LastException
			If result.Contains("Bad Base64") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else If result.Contains("BAD_DECRYPT") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else If result.Contains("WRONG_FINAL_BLOCK_LENGTH") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else
				result = ""
			End If
		End Try
		Dim TextReader1 As TextReader
		TextReader1.Initialize(File.OpenInput(File.DirInternalCache,"system.txt"))
		Dim line As String
		line = TextReader1.ReadLine
		Do While line <> Null
			If line = dev.SubString2(0,32) Then
				Dim Query As String = "INSERT INTO `ic`(`datetime`, `brand`, `serial`, `model`, `who`) VALUES ('"& DateTime.Date(DateTime.Now)&" "&DateTime.Time(DateTime.Now) &"', '"& brand &"', '"& dev.SubString2(0,32) &"', '"& dev.SubString(128) &"' '"& who &"')"
				Dim job As HttpJob
				job.Initialize("", Me)
				job.PostString("https://phonesec.nl/reg/post_get_txt.php", Query)
				If job.Success Then
					Log("SQL Success")
				End If
				Button1.Visible = False
				Button2.Visible = False
				Button3.Visible = False
				Button4.Visible = True
				Button4.Text = "Sluiten"
				Button5.Visible = False
				Button6.Visible = False
				nqrcrv.Visible = False
				EditText1.Visible = False
				QRView.Visible = True
				qr.Initialize(QRView.Width)
				Dim k As String = dev.SubString2(32,96)
				QRView.SetBitmap(qr.Create(brand&"IC:"&su.EncodeBase64(bci.Encrypt(bc.StringToBytes(su.EncodeBase64(bci.Encrypt(icglobal.GetBytes("UTF8"),k)),"UTF8"),universal))))
				Dim bmp As B4XBitmap = qr.Create(brand&"IC:"&su.EncodeBase64(bci.Encrypt(bc.StringToBytes(su.EncodeBase64(bci.Encrypt(icglobal.GetBytes("UTF8"),k)),"UTF8"),universal)))
				Dim out As OutputStream
				out = File.OpenOutput(File.DirInternalCache,"bmpfile.jpg", False)
				bmp.WriteToStream(out, 100, "JPEG")
				out.Close
			End If
			line = TextReader1.ReadLine
		Loop
		TextReader1.Close
	Else If ky.StartsWith(brand&"QRRS:") Then
		Dim result As String
		Try
			Dim dev As String = bc.StringFromBytes(bci.Decrypt(su.DecodeBase64(ky.Replace(brand&"QRRS:","")),universal),"UTF8")
		Catch
			result = LastException
			If result.Contains("Bad Base64") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else If result.Contains("BAD_DECRYPT") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else If result.Contains("WRONG_FINAL_BLOCK_LENGTH") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else
				result = ""
			End If
		End Try
		Dim Query As String = "INSERT INTO `qr`(`datetime`, `brand`, `uniqueid`, `who`) VALUES ('"& DateTime.Date(DateTime.Now)&" "&DateTime.Time(DateTime.Now) &"', '"& brand &"', '"& dev.SubString(64) &"', '"& who &"')"
		Dim job As HttpJob
		job.Initialize("", Me)
		job.PostString("https://phonesec.nl/reg/post_get_txt.php", Query)
		If job.Success Then
			Log("SQL Success")
		End If
		If kvs.GetEncrypted("2",GETUniqueID) = "0" Then
			xui.MsgboxAsync("Geen activaties beschikbaar. Druk op Opwaarderen en neem contant met producent.","FOUT")
			Return
		Else If kvs.GetEncrypted("2",GETUniqueID) < "0" Then
			xui.MsgboxAsync("Geen activaties beschikbaar. Druk op Opwaarderen en neem contant met producent.","FOUT")
			Return
		Else
			Dim act As String = kvs.GetEncrypted("2",GETUniqueID)
			Label1.Text = "Activaties: "&NumberFormat(kvs.GetEncrypted(2,GETUniqueID),0,0)
			Button1.Visible = False
			Button2.Visible = False
			Button3.Visible = False
			Button4.Visible = True
			Button4.Text = "Sluiten"
			Button5.Visible = False
			Button6.Visible = False
			nqrcrv.Visible = False
			EditText1.Visible = False
			QRView.Visible = True
			qr.Initialize(QRView.Width)
			Dim k As String = dev.SubString2(0,64)
			If brand = "OTP" Then
				Dim qrcode As String = qrglobal&"365"
			Else If brand = "UNDERGROUND" Then
				Dim qrcode As String = qrglobal&"180"
			End If
			QRView.SetBitmap(qr.Create(brand&"QR:"&su.EncodeBase64(bci.Encrypt(bc.StringToBytes(su.EncodeBase64(bci.Encrypt(qrcode.GetBytes("UTF8"),k)),"UTF8"),universal))))
			Dim bmp As B4XBitmap = qr.Create(brand&"QR:"&su.EncodeBase64(bci.Encrypt(bc.StringToBytes(su.EncodeBase64(bci.Encrypt(qrcode.GetBytes("UTF8"),k)),"UTF8"),universal)))
			Dim out As OutputStream
			out = File.OpenOutput(File.DirInternalCache,"bmpfile.jpg", False)
			bmp.WriteToStream(out, 100, "JPEG")
			out.Close
			If kvs.ContainsKey(dev.SubString(64)) = False Then
				kvs.PutEncrypted("2",(act-1),GETUniqueID)
				kvs.PutEncrypted(dev.SubString(64),DateTime.Now,GETUniqueID)
			End If
			Label1.Text = "Activaties: "&NumberFormat(kvs.GetEncrypted(2,GETUniqueID),0,0)
			Dim Writer As TextWriter
			Writer.Initialize(File.OpenOutput(File.DirInternal, "dat.temp", True))
			Writer.WriteLine(DateTime.Date(DateTime.Now)&" "&DateTime.Time(DateTime.Now))
			Writer.WriteLine(dev.SubString(64))
			If brand = "OTP" Then
				Writer.WriteLine("365 dagen")
			Else If brand = "UNDERGROUND" Then
				Writer.WriteLine("180 dagen")
			End If
			Writer.WriteLine("")
			Writer.Close
		End If

	Else If ky.StartsWith("RSUP:") Then
		Dim result As String
		Try
			Dim dev As String = bc.StringFromBytes(bci.Decrypt(su.DecodeBase64(ky.Replace("RSUP:","")),kvs.GetEncrypted("3",GETUniqueID)),"UTF8")
		Catch
			result = LastException
			If result.Contains("Bad Base64") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else If result.Contains("BAD_DECRYPT") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else If result.Contains("WRONG_FINAL_BLOCK_LENGTH") Then
				result = ""
				xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
				Terug
			Else
				result = ""
			End If
		End Try
		kvs.PutEncrypted("2",dev,GETUniqueID)
		Label1.Text = "Activaties: "&NumberFormat(kvs.GetEncrypted(2,GETUniqueID),0,0)
		kvs.Remove("3")
		xui.MsgboxAsync("Activaties toegevoegd.","Melding")
		Terug
		
	Else If ky.StartsWith("RSREQ:") Then
		Dim ikke As String = kvs.GetEncrypted("1",GETUniqueID)
		Dim ko() As Byte
		ko = md.GetMessageDigest(ikke.GetBytes("UTF8"),"MD5")
		Dim kon As String = bc.HexFromBytes(ko)
		Dim po() As Byte
		po = md.GetMessageDigest(kon.GetBytes("UTF8"),"MD5")
		Dim pon As String = bc.HexFromBytes(po)
		If pon = "F567FDCE65934D3EFEFB4F11CBC9F4B6" Then
			Dim result As String
			Try
				Dim dev As String = bc.StringFromBytes(bci.Decrypt(su.DecodeBase64(ky.Replace("RSREQ:","")),universal),"UTF8")
			Catch
				result = LastException
				If result.Contains("Bad Base64") Then
					result = ""
					xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
					Terug
				Else If result.Contains("BAD_DECRYPT") Then
					result = ""
					xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
					Terug
				Else If result.Contains("WRONG_FINAL_BLOCK_LENGTH") Then
					result = ""
					xui.MsgboxAsync("Fout bij het lezen van QRcode!","FOUT")
					Terug
				Else
					result = ""
				End If
			End Try
			Dim options As List = Array("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100")
			InputListAsync(options, "Selecteer aantal:", -1, True)
			Wait For InputList_Result (Index As Int)
			If Index <> DialogResponse.CANCEL Then
				Dim act As String =  options.Get(Index)
				Button1.Visible = False
				Button2.Visible = False
				Button3.Visible = False
				Button4.Visible = True
				Button4.Text = "Sluiten"
				Button5.Visible = False
				Button6.Visible = False
				nqrcrv.Visible = False
				EditText1.Visible = False
				QRView.Visible = True
				qr.Initialize(QRView.Width)
				QRView.SetBitmap(qr.Create(su.EncodeBase64(bci.Encrypt(bc.StringToBytes("RSUP:"&su.EncodeBase64(bci.Encrypt(act.GetBytes("UTF8"),dev)),"UTF8"),universal))))
				Dim bmp As B4XBitmap = qr.Create(su.EncodeBase64(bci.Encrypt(bc.StringToBytes("RSUP:"&su.EncodeBase64(bci.Encrypt(act.GetBytes("UTF8"),dev)),"UTF8"),universal)))
				Dim out As OutputStream
				out = File.OpenOutput(File.DirInternalCache,"bmpfile.jpg", False)
				bmp.WriteToStream(out, 100, "JPEG")
				out.Close
			Else
				Terug
			End If
		End If
		
	End If
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)
	nqrcrv.ScanNow = False
	nqrcrv.stopCamera
End Sub

Sub Terug
	raw = ""
	Button1.Visible = True
	Button1.Text = "Scan QR"
	Button2.Visible = True
	Button2.Text = "Opwaarderen"
	Button3.Visible = False
	Button3.Text = "Activaties"
	Button4.Visible = False
	Button4.Text = "Annuleren"
	Button5.Visible = False
	Button5.Text = "Genereer QR"
	Button6.Visible = False
	nqrcrv.Visible = False
	QRView.Visible = False
	EditText1.Visible = False
	Label1.Text = "Activaties: "&NumberFormat(kvs.GetEncrypted(2,GETUniqueID),0,0)
End Sub

Private Sub Button1_Click 'eerste button Scan QR
	If Button1.Text = "Scan QR" Then 'main menu
		Button1.Visible = False
		Button2.Visible = False
		Button3.Visible = False
		Button4.Visible = True
		Button5.Visible = False
		Button6.Visible = False
		nqrcrv.Visible = True
		nqrcrv.ScanNow = True
		nqrcrv.startCamera
		EditText1.Visible = False
		QRView.Visible = False
		Button4.Text = "Annuleren"
	End If
End Sub

Private Sub Button2_Click 'tweede button QR Chat
	If Button2.Text = "Opwaarderen" Then 'Scan QR menu
		If kvs.ContainsKey("3") = False Then
			kvs.PutEncrypted("3",RandomString(64),GETUniqueID)
		End If
		Button1.Visible = False
		Button2.Visible = False
		Button3.Visible = False
		Button4.Visible = True
		Button4.Text = "Sluiten"
		Button5.Visible = False
		Button6.Visible = False
		nqrcrv.Visible = False
		EditText1.Visible = False
		QRView.Visible = True
		qr.Initialize(QRView.Width)
		Dim key As String = "RSREQ:"&su.EncodeBase64(bci.Encrypt(bc.StringToBytes(kvs.GetEncrypted("3",GETUniqueID),"UTF8"),universal))
		QRView.SetBitmap(qr.Create(su.EncodeBase64(bci.Encrypt(key.GetBytes("UTF8"),universal))))
		Dim bmp As B4XBitmap = qr.Create(su.EncodeBase64(bci.Encrypt(key.GetBytes("UTF8"),universal)))
		Dim out As OutputStream
		out = File.OpenOutput(File.DirInternalCache,"bmpfile.jpg", False)
		bmp.WriteToStream(out, 100, "JPEG")
		out.Close
	End If
End Sub

Private Sub Button3_Click 'Derde button Contacten
	If File.Exists(File.DirInternal,"dat.temp") = False Then
		Dim list As List
		list.Add("Activaties:")
		File.WriteList(File.DirInternal,"dat.temp",list)
	End If
	Button1.Visible = False
	Button2.Visible = False
	Button3.Visible = False
	Button4.Visible = True
	Button4.Text = "Sluiten"
	Button5.Visible = False
	Button6.Visible = False
	nqrcrv.Visible = False
	EditText1.Visible = False
	QRView.Visible = False
	Dim ScrollView1 As ScrollView
	Dim Text1 As Label
	Text1.Initialize("")
	Text1.SingleLine = False
	Text1.Text = File.ReadString(File.DirInternal,"dat.temp")
	Text1.Color = Colors.White
	Text1.TextColor = Colors.Black
	Text1.Gravity = Gravity.LEFT
	Text1.TextSize = 18
	Text1.Typeface = Typeface.DEFAULT
   
	ScrollView1.Initialize(100%y)
	Activity.AddView(ScrollView1, 0, 0, 100%x, 100%y)
	ScrollView1.Panel.AddView(Text1,0,0,100%x,100%y)
End Sub

Private Sub Button4_Click 'bottom center button
	If Button4.Text = "Annuleren" Then
		nqrcrv.ScanNow = False
		nqrcrv.stopCamera
	End If
	Terug
End Sub

Private Sub Button5_Click 'bottom left button
	If Button5.Text = "Opslaan" Then
		Dim name As String = EditText1.Text
		If name = "" Then
			xui.MsgboxAsync("Geen naam opgegeven","FOUT")
		Else
			If name.Length < 3 Then
				xui.MsgboxAsync("Minimaal 3 karakters","FOUT")
			Else
				kvs.PutEncrypted("1",name,GETUniqueID)
				If kvs.ContainsKey("2") = False Then
					kvs.PutEncrypted("2","0",GETUniqueID)
				End If
				start
			End If
		End If
	End If
End Sub

Private Sub Button6_Click 'bottom right button
	If Button5.Text = "Opslaan" Then
		ExitApplication
	Else
		Terug
	End If
End Sub

Sub RandomString(length As Int) As String
	Dim abc As String = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	Dim randomstr As String = ""
	For i = 0 To length - 1
		randomstr = randomstr & (abc.CharAt(Rnd(0,abc.Length)))
	Next
	Return randomstr
End Sub

Sub GETUniqueID As String
	Dim JO As JavaObject
	Dim ID As String
	JO.InitializeContext
	ID = JO.RunMethod("getUniqueID", Null)
	Return ID
End Sub

#If Java
import android.media.MediaDrm;
import android.os.Build;
import android.content.*;
import java.util.*;

//private final Context context;
private String initialVal = "";


public String getUniqueID() {
   UUID wideVineUuid = new UUID(-0x121074568629b532L, -0x5c37d8232ae2de13L);
   try {
      MediaDrm wvDrm = new MediaDrm(wideVineUuid);
      byte[] wideVineId = wvDrm.getPropertyByteArray(MediaDrm.PROPERTY_DEVICE_UNIQUE_ID);
      Base64.Encoder enc = Base64.getEncoder();
      String encodedUid = enc.encodeToString(wideVineId);
      return encodedUid;
   } catch (Exception e) {
      return initialVal;
   }
}

#End If